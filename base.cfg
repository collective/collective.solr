[buildout]
index = https://pypi.org/simple
extensions = mr.developer
parts +=
    instance
    omelette
    vscode
    test
    test-robot
    coverage
    test-coverage
    releaser
    sphinxbuilder
    check-readme
develop = .

auto-checkout =

[sources]
plone.restapi = git https://github.com/plone/plone.restapi.git branch=master
kitconcept.recipe.solr = git https://github.com/kitconcept/kitconcept.recipe.solr.git pushurl=git@github.com:kitconcept/kitconcept.recipe.solr.git branch=master

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    plone.app.debugtoolbar
    collective.solr [test]
    plone.restapi
environment-vars =
    zope_i18n_compile_mo_files true

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[vscode]
recipe = collective.recipe.vscode

[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
defaults = ['-s', 'collective.solr', '--auto-color', '--auto-progress']
environment = environment

[test-robot]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export ROBOTSUITE_PREFIX=ONLYROBOT && ${buildout:directory}/bin/test -t ONLYROBOT --all
    # bin/coverage run --source=${buildout:directory}/src/collective/solr bin/test
output = ${buildout:directory}/bin/test-robot
mode = 755
environment = environment

[environment]
ROBOT_SELENIUM2LIBRARY_RUN_ON_FAILURE = Capture page screenshot and log source


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/collective/solr bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 90%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
build = ${buildout:directory}/docs

[check-readme]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    python ${buildout:directory}/setup.py check -r -s
output = ${buildout:directory}/bin/check-readme
mode = 755

[versions]
setuptools =
zc.buildout =
collective.solr =
