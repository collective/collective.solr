[buildout]
extensions = mr.developer
parts +=
    instance
    omelette
    test
    coverage
    test-coverage
    code-analysis
    releaser
    sphinxbuilder
    check-readme
develop = .

auto-checkout = *

[sources]
plone.restapi = git https://github.com/plone/plone.restapi.git

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    plone.app.debugtoolbar
    collective.solr [test]
    plone.restapi

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
defaults = ['-s', 'collective.solr', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    ${buildout:directory}/bin/coverage run --source=${buildout:directory}/src/collective/solr bin/test
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 90%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-max-complexity = 50
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg,skins
flake8-extensions =
#    flake8-coding
#    flake8-debugger
#    flake8-print


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/docs
build = ${buildout:directory}/docs

[check-readme]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    python ${buildout:directory}/setup.py check -r -s
output = ${buildout:directory}/bin/check-readme
mode = 755
