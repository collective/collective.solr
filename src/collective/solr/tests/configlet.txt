Solr control panel
==================

First some initial setup code:

We need to patch the dispatcher because we want to test *setting* solr to
active without *having* it active.
    >>> from collective.solr import dispatcher
    >>> _save_isActive = dispatcher.isActive
    >>> dispatcher.isActive = lambda:False

    >>> from zope.component import getUtility
    >>> from collective.solr.utils import getConfig
    >>> config = getConfig()
    >>> config.active
    False
    >>> config.host
    '127.0.0.1'
    >>> config.port
    8983
    >>> config.base
    '/solr'
    >>> config.async
    False
    >>> config.auto_commit
    True
    >>> config.commit_within
    0
    >>> config.index_timeout
    0.0
    >>> config.search_timeout
    0.0
    >>> config.max_results
    10000000
    >>> config.required
    ('SearchableText',)
    >>> config.facets
    ('portal_type', 'review_state')
    >>> config.filter_queries
    ('portal_type',)
    >>> config.slow_query_threshold
    0
    >>> config.effective_steps
    1
    >>> config.exclude_user
    False
    >>> config.highlight_fields
    ()
    >>> config.highlight_formatter_pre
    '['
    >>> config.highlight_formatter_post
    ']'
    >>> config.highlight_fragsize
    100
    >>> config.field_list
    []
    >>> config.levenshtein_distance
    0.0
    >>> config.atomic_updates
    True

Viewing the site control panel
------------------------------

    >>> from plone.app.testing import TEST_USER_ID
    >>> from plone.app.testing import TEST_USER_NAME
    >>> from plone.app.testing import TEST_USER_PASSWORD
    >>> from plone.app.testing import setRoles
    >>> from plone.testing.z2 import Browser
    >>> from transaction import commit
    >>> setRoles(layer['portal'], TEST_USER_ID, ['Manager'])
    >>> commit()
    >>> browser = Browser(layer['app'])
    >>> browser.open('http://nohost/plone/login_form')
    >>> browser.getControl(name='__ac_name').value = TEST_USER_NAME
    >>> browser.getControl(name='__ac_password').value = TEST_USER_PASSWORD
    >>> browser.getControl(name='submit').click()
    >>> browser.open('http://nohost/plone/@@solr-controlpanel')
    >>> browser.url
    'http://nohost/plone/@@solr-controlpanel'

Click the cancel button:

    >>> browser.getControl(name="form.buttons.cancel").click()
    >>> browser.url.endswith('plone_control_panel')
    True

There should be still no changes:

    >>> 'Changes canceled.' in browser.contents
    True


Make some changes
-----------------

    >>> browser.open('http://nohost/plone/@@solr-controlpanel')
    >>> browser.url.endswith('solr-controlpanel')
    True

    >>> browser.getControl(name='form.active').value = True
    >>> browser.getControl(name='form.host').value = 'foo.bar'
    >>> browser.getControl(name='form.port').value = '1234'
    >>> browser.getControl(name='form.base').value = '/solr'
    >>> browser.getControl(name='form.async').value = True
    >>> browser.getControl(name='form.auto_commit').value = False
    >>> browser.getControl(name='form.commit_within').value = '10000'
    >>> browser.getControl(name='form.index_timeout').value = '7'
    >>> browser.getControl(name='form.search_timeout').value = '3.1415'
    >>> browser.getControl(name='form.max_results').value = '23'
    >>> browser.getControl(name='form.required.0.').value = 'foo'
    >>> browser.getControl(name='form.required.add').click()
    >>> browser.getControl(name='form.required.1.').value = 'bar'
    >>> browser.getControl(name='form.search_pattern').value = '(Title:{value})'
    >>> browser.getControl(name='form.facets.0.').value = 'type'
    >>> browser.getControl(name='form.facets.1.').value = 'state'
    >>> browser.getControl(name='form.filter_queries.0.').value = 'portal_type'
    >>> browser.getControl(name='form.slow_query_threshold').value = '50'
    >>> browser.getControl(name='form.effective_steps').value = '300'
    >>> browser.getControl(name='form.exclude_user').value = True
    >>> browser.getControl(name='form.highlight_fields.add').click()
    >>> browser.getControl(name='form.highlight_fields.0.').value = 'SearchableText'
    >>> browser.getControl(name='form.highlight_formatter_pre').value = '>'
    >>> browser.getControl(name='form.highlight_formatter_post').value = '<'
    >>> browser.getControl(name='form.highlight_fragsize').value = '150'
    >>> browser.getControl(name='form.field_list.add').click()
    >>> browser.getControl(name='form.field_list.0.').value = 'Title'
    >>> browser.getControl(name='form.field_list.add').click()
    >>> browser.getControl(name='form.field_list.1.').value = 'effective'
    >>> browser.getControl(name='form.levenshtein_distance').value = '1.0'
    >>> browser.getControl(name='form.atomic_updates').value = False

Click the save button:

    >>> browser.getControl(name="form.actions.save").click()
    >>> browser.url.endswith('solr-controlpanel')
    True

We should be informed that something has changed:

    >>> 'Changes saved.' in browser.contents
    True

Make sure the changes have been applied correctly to the tool:

    >>> config.active
    True
    >>> config.host
    u'foo.bar'
    >>> config.port
    1234
    >>> config.base
    '/solr'
    >>> config.async
    True
    >>> config.auto_commit
    False
    >>> config.commit_within
    10000
    >>> config.index_timeout
    7.0
    >>> config.search_timeout
    3.1415...
    >>> config.max_results
    23
    >>> config.required
    [u'foo', u'bar']
    >>> config.search_pattern
    '(Title:{value})'
    >>> config.facets
    [u'type', u'state']
    >>> config.slow_query_threshold
    50
    >>> config.effective_steps
    300
    >>> config.exclude_user
    True
    >>> config.highlight_fields
    [u'SearchableText']
    >>> config.highlight_formatter_pre
    u'>'
    >>> config.highlight_formatter_post
    u'<'
    >>> config.highlight_fragsize
    150
    >>> config.field_list
    [u'Title', u'effective']
    >>> config.levenshtein_distance
    1.0
    >>> config.atomic_updates
    False

Now that the connection is active we can also select more filter query
parameters from the complete list of Solr indexes, provided that we use the
correct host and port:

    >>> browser.getControl(name='form.host').value = '127.0.0.1'
    >>> browser.getControl(name='form.port').value = '8983'
    >>> browser.getControl(name="form.actions.save").click()

    >>> browser.getControl(name='form.filter_queries.add').click()
    >>> browser.getControl(name='form.filter_queries.0.').value = 'Subject'
    >>> browser.getControl(name='form.filter_queries.1.').value = 'review_state'
    >>> browser.getControl(name="form.actions.save").click()
    >>> sorted(config.filter_queries)
    [u'Subject', u'review_state']


Required query parameters
-------------------------

Lastly, let's make sure the "Required query parameters" setting can be set
to an empty list (please see `issue #18`__ for more infos):

  .. __: http://plone.org/products/collective.solr/issues/18

    >>> browser.getControl(name='form.required.remove_0').value = True
    >>> browser.getControl(name='form.required.remove_1').value = True
    >>> browser.getControl(name='form.required.remove').click()
    >>> browser.getControl(name="form.actions.save").click()
    >>> 'Changes saved.' in browser.contents
    True

    >>> config.required
    []

Clean up.
    >>> dispatcher.isActive = _save_isActive
